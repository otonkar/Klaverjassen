###
 # Example from https://codeburst.io/get-started-with-nginx-on-docker-907e5c0c9f3a
 #
 # docker build -f Dockerfile_front_prd -t front_klaverjas .
 # docker run -it -p 80:80 --rm --name test klaverjassen_front
 #
 # docker exec -it klaverjas_nginx_prd /bin/sh
 #
 # new certificate, run from klaverjassen
 #  docker run -v ./frontend/nginx/letsencrypt:/etc/letsencrypt --name nginx -ti -p 8080:80 nginx-certbot sh
###

############################################################
# build stage
FROM node:lts-alpine as build-stage

WORKDIR /app
COPY ./project/package*.json ./

# To install packages from package.json
RUN npm install

COPY ./project/src ./src

# audit to fix security issues,  needs the package.json
RUN npm audit fix 
# RUN npm audit fix --force 

# Create the SPA application
RUN npm run build



#############################################################
# # production stage
FROM nginx:stable-alpine as production-stage

# install Certbot
# https://geko.cloud/nginx-and-ssl-with-certbot-in-docker-alpine/
# RUN apk add python3 python3-dev py3-pip build-base libressl-dev musl-dev libffi-dev
# RUN pip3 install pip --upgrade
# RUN pip3 install certbot-nginx
# RUN mkdir /etc/letsencrypt

# Copy the application 
RUN mkdir -p /app/dist
COPY --from=build-stage /app/dist /app/dist

# The default conf file is in /etc/nginx/nginx.conf
# This file includes the files from /etc/nginx/conf.d
# In the conf.d folder the server configurations must be placed
# Overwrite is default file ../conf.d/
# mount this as a volume

EXPOSE 80
EXPOSE 5000

CMD ["nginx", "-g", "daemon off;"]
